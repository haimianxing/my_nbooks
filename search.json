[
  {
    "objectID": "core_bk.html",
    "href": "core_bk.html",
    "title": "core_test",
    "section": "",
    "text": "say\n\n say (w)",
    "crumbs": [
      "core_test"
    ]
  },
  {
    "objectID": "core.html",
    "href": "core.html",
    "title": "core",
    "section": "",
    "text": "source\n\nload_model\n\n load_model (MODEL_PATH=None)\n\n加载模型\n\nsource\n\n\nresp_from_model\n\n resp_from_model (instruction, model=None)\n\n获取模型回复\n\ninstruction = \"\"\"\nWrite Python code to solve this problem in a brute force manner. You will only print the final result.\n\nFind the largest two digit prime number which is also a prime number when the digits are reversed.\n\nReminder: You will write Python code. You do not care about the efficiency of the solution, you will only care about the correctness.\n\"\"\".strip()\noutput_text = resp_from_model(instruction)\nprint(output_text)\n\n\nsource\n\n\ncode_extract\n\n code_extract (reply)\n\n\ncode_extract('[INST]Write Python code to solve this problem in a brute force manner. You will only print the final result.\\n\\nFind the largest two digit prime number which is also a prime number when the digits are reversed.\\n\\nReminder: You will write Python code. You do not care about the efficiency of the solution, you will only care about the correctness.[/INST] Here is a brute force solution to find the largest two digit prime number which is also a prime number when the digits are reversed:\\n\\n```python\\ndef is\\\\_prime(n):\\nfor i in range(2, int(n**0.5) + 1):\\nif n % i == 0:\\nreturn False\\nreturn True\\n\\nlargest\\\\_prime = -1\\n')\n\n''\n\n\n\nsource\n\n\ncode_exec\n\n code_exec (code, time_limit_seconds=20)\n\n\nexecution_output = code_exec(\"\"\"\nprint(1+3)\n\"\"\", time_limit_seconds=5)\n\nprint(execution_output)\n\n4\n\n\n\n\nsource\n\n\nsolve_list_by_py\n\n solve_list_by_py (df_ori, problem='problem')",
    "crumbs": [
      "core"
    ]
  },
  {
    "objectID": "core_autoglu.html",
    "href": "core_autoglu.html",
    "title": "core",
    "section": "",
    "text": "source\n\nload_model\n\n load_model (MODEL_PATH=None)\n\n加载模型\n\nsource\n\n\nresp_from_model\n\n resp_from_model (instruction, model=None)\n\n获取模型回复\n\ninstruction = \"\"\"\nWrite Python code to solve this problem in a brute force manner. You will only print the final result.\n\nFind the largest two digit prime number which is also a prime number when the digits are reversed.\n\nReminder: You will write Python code. You do not care about the efficiency of the solution, you will only care about the correctness.\n\"\"\".strip()\noutput_text = resp_from_model(instruction)\nprint(output_text)\n\n\nsource\n\n\ncode_extract\n\n code_extract (reply)\n\n\ncode_extract('[INST]Write Python code to solve this problem in a brute force manner. You will only print the final result.\\n\\nFind the largest two digit prime number which is also a prime number when the digits are reversed.\\n\\nReminder: You will write Python code. You do not care about the efficiency of the solution, you will only care about the correctness.[/INST] Here is a brute force solution to find the largest two digit prime number which is also a prime number when the digits are reversed:\\n\\n```python\\ndef is\\\\_prime(n):\\nfor i in range(2, int(n**0.5) + 1):\\nif n % i == 0:\\nreturn False\\nreturn True\\n\\nlargest\\\\_prime = -1\\n')\n\n''\n\n\n\nsource\n\n\ncode_exec\n\n code_exec (code, time_limit_seconds=20)\n\n\nexecution_output = code_exec(\"\"\"\nprint(1+3)\n\"\"\", time_limit_seconds=5)\n\nprint(execution_output)\n\n4\n\n\n\n\nsource\n\n\nsolve_list_by_py\n\n solve_list_by_py (df_ori, problem='problem')",
    "crumbs": [
      "core"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "my_nbooks",
    "section": "",
    "text": "This file will become your README and also the index of your documentation.",
    "crumbs": [
      "my_nbooks"
    ]
  },
  {
    "objectID": "index.html#install",
    "href": "index.html#install",
    "title": "my_nbooks",
    "section": "Install",
    "text": "Install\npip install my_nbooks",
    "crumbs": [
      "my_nbooks"
    ]
  },
  {
    "objectID": "index.html#how-to-use",
    "href": "index.html#how-to-use",
    "title": "my_nbooks",
    "section": "How to use",
    "text": "How to use\nFill me in please! Don’t forget code examples:\n\nsay_hello('11')\n\n'Hello 11!'\n\n\n\nimport os\nos.getcwd()\n\n'C:\\\\Users\\\\Administrator\\\\Documents\\\\WeChat Files\\\\wxid_fje5vggkvjg912\\\\FileStorage\\\\File\\\\2024-06\\\\my_nbooks\\\\my_nbooks\\\\nbs'\n\n\n\nimport sys\nsys.path\n# sys.path.append('\\\\00_core_bk.ipynb')\n\n['D:\\\\programesx64\\\\Anaconda3\\\\envs\\\\mykaggle\\\\python39.zip',\n 'D:\\\\programesx64\\\\Anaconda3\\\\envs\\\\mykaggle\\\\DLLs',\n 'D:\\\\programesx64\\\\Anaconda3\\\\envs\\\\mykaggle\\\\lib',\n 'D:\\\\programesx64\\\\Anaconda3\\\\envs\\\\mykaggle',\n '',\n 'C:\\\\Users\\\\Administrator\\\\AppData\\\\Roaming\\\\Python\\\\Python39\\\\site-packages',\n 'D:\\\\programesx64\\\\Anaconda3\\\\envs\\\\mykaggle\\\\lib\\\\site-packages',\n 'e:\\\\proj\\\\my_nbooks',\n 'D:\\\\programesx64\\\\Anaconda3\\\\envs\\\\mykaggle\\\\lib\\\\site-packages\\\\win32',\n 'D:\\\\programesx64\\\\Anaconda3\\\\envs\\\\mykaggle\\\\lib\\\\site-packages\\\\win32\\\\lib',\n 'D:\\\\programesx64\\\\Anaconda3\\\\envs\\\\mykaggle\\\\lib\\\\site-packages\\\\Pythonwin',\n 'C:\\\\Users\\\\Administrator\\\\Documents\\\\WeChat Files\\\\wxid_fje5vggkvjg912\\\\FileStorage\\\\File\\\\2024-06\\\\my_nbooks\\\\my_nbooks\\\\nbs\\\\00_core_bk.ipynb',\n 'C:\\\\Users\\\\Administrator\\\\Documents\\\\WeChat Files\\\\wxid_fje5vggkvjg912\\\\FileStorage\\\\File\\\\2024-06\\\\my_nbooks\\\\my_nbooks\\\\nbs\\\\00_core_bk',\n '\\\\00_core_bk.ipynb']\n\n\n\nfrom\n\n\nsay(11)\n\nNameError: name 'say' is not defined",
    "crumbs": [
      "my_nbooks"
    ]
  }
]